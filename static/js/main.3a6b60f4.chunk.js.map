{"version":3,"sources":["serviceWorker.js","component/frame.js","pages/linkpage.js","pages/evaluate.js","pages/append.js","routes/Route.js","index.js"],"names":["Boolean","window","location","hostname","match","Content","Layout","Footer","Sider","Frame","Menu","SubMenu","state","collapsed","onCollapse","console","log","setState","this","props","body","BreItem","style","minHeight","collapsible","className","theme","defaultSelectedKeys","mode","Item","key","to","type","margin","textAlign","React","Component","randomStr","LinkPage","deleteLink","id","url","loading","Axios","post","then","res","data","code","filter","item","ID","showModal","visible","handleOk","e","handleCancel","handleSubmit","preventDefault","form","validateFields","err","values","getlinks","message","success","handleTableChange","pagination","sorter","pager","current","build","bind","page","relust","total","count","datas","getFieldDecorator","title","onOk","onCancel","labelCol","span","wrapperCol","onSubmit","label","rules","required","offset","htmlType","columns","dataIndex","render","text","href","record","color","Eavcount","Appendcount","onClick","float","paddingRight","paddingBottom","dataSource","onChange","modile","breItem","Form","create","name","Paragraph","Typography","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","Evaluate","evaluateinit","parseInt","linkid","images","filelist","fileList","i","length","push","handleChange","handlePreview","a","preview","originFileObj","previewImage","previewVisible","updatestaus","params","uploadButton","maskClosable","TextArea","action","listType","onPreview","ellipsis","rows","expandable","copyable","map","itme","height","width","src","Path","Append","Root","exact","path","component","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a6b60f4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Layout,Menu ,Icon} from 'antd';\r\nimport {Link} from 'react-router-dom';\r\nconst {Content, Footer, Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass Frame extends React.Component{\r\n\r\n    state = {\r\n        collapsed: false,\r\n      };\r\n      \r\n     \r\n\r\n      onCollapse = collapsed => {\r\n        console.log(collapsed);\r\n        this.setState({ collapsed });\r\n      };\r\n    render(){\r\n            var {body,BreItem}=this.props\r\n            return (\r\n              <Layout style={{ minHeight: '100vh' }}>\r\n                <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n                  <div className=\"logo\" />\r\n                  <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                    <Menu.Item key=\"1\">\r\n                    <Link to=\"/link\"> <Icon type=\"pie-chart\" />\r\n                    <span>链接管理</span>\r\n                    </Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item key=\"2\">\r\n                      <Icon type=\"desktop\" />\r\n                      <span>todo</span>\r\n                    </Menu.Item>\r\n        \r\n                    <Menu.Item key=\"9\">\r\n                      <Icon type=\"file\" />\r\n                      <span>todo</span>\r\n                    </Menu.Item>\r\n                  </Menu>\r\n                </Sider>\r\n                <Layout>\r\n                  {/* <Header style={{ background: '#fff', padding: 0 }} /> */}\r\n                  <Content style={{ margin: '0 16px' }}>\r\n                    {BreItem}\r\n                   {body}\r\n                  </Content>\r\n                  <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n                </Layout>\r\n              </Layout>\r\n            )\r\n    }\r\n    \r\n}\r\nexport default Frame","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Frame from '../component/frame'\r\nimport {Breadcrumb,Divider,Table,Tag, Button, Row,Modal, Form,Input, message} from 'antd'\r\nimport Axios from 'axios'\r\n\r\nconst  randomStr=\"AWDKJL123\"\r\nclass LinkPage extends React.Component{\r\n\r\n\r\n    constructor(){\r\n        super()\r\n        this.build=this.build.bind(this)\r\n        this.getlinks=this.getlinks.bind(this)\r\n        \r\n        this.state={\r\n            visible: false,\r\n            pagination:{},\r\n            data:[]\r\n        }\r\n        this.getlinks(1)\r\n    }\r\n\r\n    getlinks(page){\r\n      this.setState({loading:true})\r\n      var url=randomStr+\"/list/link\"\r\n      var data={page:page}\r\n        Axios.post(url,data).then((res)=>{\r\n          if(res.data.code==0){\r\n          var relust=res.data.data\r\n          var pagination=this.state.pagination\r\n          pagination.total=relust.count\r\n          this.setState({\r\n            data:relust.datas,\r\n            pagination:pagination,\r\n            loading:false\r\n          })\r\n        }\r\n        })\r\n    }\r\n    deleteLink=(id)=>{\r\n      console.log(id)\r\n      var url=randomStr+\"/delete/link\"\r\n      this.setState({\r\n        loading:true\r\n      })\r\n      Axios.post(url,{\"linkid\":id}).then((res)=>{\r\n        if (res.data.code==0){\r\n          var data=this.state.data.filter(item=>item.ID!=id)\r\n          this.setState({\r\n            data:data,\r\n            loading:false\r\n\r\n          })\r\n        }\r\n      })\r\n    }\r\n    showModal = () => {\r\n    this.setState({\r\n        visible: true,\r\n    });\r\n    };\r\n\r\n    handleOk = e => {\r\n    console.log(e);\r\n    this.setState({\r\n        visible: false,\r\n    });\r\n    };\r\n\r\n    handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n        visible: false,\r\n    });\r\n    };\r\n    handleSubmit= e =>{\r\n\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n          if (!err) {\r\n            var url=randomStr+\"/add/link\"\r\n            var data={\"name\":values[\"name\"],\"url\":values[\"url\"]}\r\n            Axios.post(url,data).then((res)=>{\r\n              if(res.data.code==0){\r\n                this.getlinks(1)\r\n                message.success(\"添加成功\")\r\n              }\r\n            })\r\n          }\r\n        });\r\n\r\n    };\r\n\r\n    modile(){\r\n        const { getFieldDecorator } = this.props.form;\r\n\r\n        return(\r\n            <Modal\r\n            title=\"新增链接\"\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n          >\r\n          <Form labelCol={{span:5}} wrapperCol={{span:15}} onSubmit={this.handleSubmit}>\r\n              <Form.Item label=\"名称\">\r\n              {getFieldDecorator('name', {\r\n            rules: [{ required: true, message: '不可为空' }],\r\n          })(<Input />)}\r\n              </Form.Item>\r\n             \r\n              <Form.Item label=\"地址\">\r\n              {getFieldDecorator('url', {\r\n            rules: [{ required: true, message: '不可为空' }],\r\n          })(<Input />)}\r\n              </Form.Item>\r\n\r\n              <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n          </Button>\r\n          </Form.Item>\r\n          </Form>\r\n          </Modal>\r\n        )\r\n    }\r\n    handleTableChange=(pagination,filter,sorter)=>{\r\n\r\n      const pager=this.state.pagination\r\n      pager.current=pagination.current\r\n      this.setState({\r\n        pagination:pager\r\n      })\r\n      this.getlinks(pager.current)\r\n    }\r\n    build(){\r\n        const columns = [\r\n            {\r\n              title: '名称',\r\n              dataIndex: 'Name',\r\n              key: 'Name',\r\n            \r\n            },\r\n            {\r\n              title: '链接地址',\r\n              dataIndex: 'Url',\r\n              key: 'Url',\r\n              render: text => <a href={text}>{text}</a>,\r\n            },\r\n            {\r\n              title: 'Tags',\r\n              key: 'tags',\r\n              dataIndex: 'tags',\r\n              render: (text,record)=> (\r\n                 \r\n                <span>\r\n              <Link to={\"/evaluate/\"+record.ID}><Tag color=\"red\">评语:{record.Eavcount} </Tag></Link>\r\n              <Link to={\"/append/\"+record.ID}> <Tag color=\"red\">追评:{record.Appendcount} </Tag></Link>\r\n                </span>\r\n              ),\r\n            },\r\n            {\r\n              title: 'Action',\r\n              key: 'action',\r\n              render: (text, record) => (\r\n                <span>\r\n                \r\n                  <Divider type=\"vertical\" />\r\n                  <a onClick={()=>{this.deleteLink(record.ID)}}>删除</a>\r\n                </span>\r\n              ),\r\n            },\r\n          ];\r\n          return(\r\n            <div>\r\n                <Row>\r\n            <div style={{float:\"right\",paddingRight:15,paddingBottom:10}}>\r\n               <Button onClick={()=>this.showModal()\r\n               } type=\"primary\">新增链接</Button> \r\n            </div>\r\n            </Row>\r\n            <Row>\r\n            <Table pagination={this.state.pagination}    loading={this.state.loading}  columns={columns} dataSource={this.state.data} onChange={this.handleTableChange} />\r\n            </Row>\r\n            {this.modile()}\r\n            </div>\r\n          )\r\n          \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        var breItem=(\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>所有链接</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        )\r\n        \r\n        return(\r\n            <Frame\r\n            BreItem={breItem}\r\n            body={this.build()}\r\n\r\n\r\n            />\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nLinkPage = Form.create({ name: 'LinkPage' })(LinkPage);\r\n\r\nexport default LinkPage","import React from 'react'\r\nimport Frame from '../component/frame'\r\nimport {Breadcrumb,Divider,Table,Tag, Button, Row,Modal, Form,Input,Typography,Upload,Icon, message} from 'antd'\r\nimport Axios from 'axios';\r\n\r\nconst  randomStr=\"AWDKJL123\"\r\nconst { Paragraph } = Typography;\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\nclass Evaluate extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.build=this.build.bind(this)\r\n        this.modile=this.modile.bind(this)\r\n        this.state={\r\n            visible: false,\r\n            previewVisible: false,\r\n            previewImage: '',\r\n            fileList:[],\r\n            pagination:{},\r\n            loading:false,\r\n            linkid:this.props.match.params.linkid,\r\n            datas:[]\r\n        }\r\n        this.evaluateinit(1)\r\n    }\r\n   \r\n    evaluateinit=page=>{\r\n\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        var url=randomStr+\"/list/eva\"\r\n        Axios.post(url,{\"page\":page,\"linkid\":parseInt(this.state.linkid),\"staus\":\"not\"}).then((res=>{\r\n\r\n            if(res.data.code==0){\r\n                var pagination=this.state.pagination\r\n             pagination.total=res.data.data.count\r\n                this.setState({\r\n                    datas:res.data.data.datas,\r\n                    pagination:pagination,\r\n                    loading:false\r\n                })\r\n            }\r\n\r\n        }))\r\n\r\n    }\r\n    showModal = () => {\r\n    this.setState({\r\n        visible: true,\r\n    });\r\n    };\r\n    \r\n    handleOk = e => {\r\n    \r\n    this.setState({\r\n        visible: false,\r\n    });\r\n    };\r\n    \r\n    handleCancel = e => {\r\n    \r\n    this.setState({\r\n        visible: false,\r\n    });\r\n    };\r\n    handleSubmit= e =>{\r\n\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n            var images=[]\r\n            var filelist=this.state.fileList\r\n            for(var i=0;i<filelist.length;i++){\r\n                images.push(filelist[i][\"response\"][\"data\"])\r\n            }\r\n            var data={\r\n                \"comment\":values[\"comment\"],\r\n                \"images\":images,\r\n                \"linkid\":parseInt(this.state.linkid)\r\n            }\r\n        \r\n            var url=randomStr+\"/add/eva\"\r\n            Axios.post(url,data).then((res)=>{\r\n\r\n                if(res.data.code==0){\r\n                message.success(\"添加成功\")\r\n                this.evaluateinit(1)\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        });\r\n\r\n    };\r\n    handleChange = ({ fileList }) => {\r\n        \r\n        console.log(fileList)\r\n        this.setState({ fileList })\r\n    };\r\n\r\n    handlePreview = async file => {\r\n      \r\n        if (!file.url && !file.preview) {\r\n          file.preview =  await getBase64(file.originFileObj);\r\n        }\r\n       \r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n          });\r\n    }\r\n    modile(){\r\n        var fileList=this.state.fileList\r\n        const uploadButton = (\r\n            <div>\r\n              <Icon type=\"plus\" />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n        const { getFieldDecorator } = this.props.form;\r\n        return(\r\n            <Modal \r\n           \r\n            maskClosable={false}\r\n            title=\"新增评语\"\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n          >\r\n        <Form  labelCol={{span:5}} wrapperCol={{span:15}} onSubmit={this.handleSubmit}  >\r\n            <Form.Item label=\"评语\">\r\n            {\r\n                getFieldDecorator(\"comment\", {\r\n                    rules: [{ required: true, message: '不可为空'}]\r\n                })(<Input.TextArea />)\r\n            }\r\n            </Form.Item> \r\n            <Form.Item label=\"图片\">\r\n          <Upload\r\n          name=\"image\"\r\n          action=\"/upload\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" >提交</Button>\r\n            </Form.Item>\r\n        </Form>\r\n              </Modal>\r\n        )\r\n    }\r\n    handleTableChange=(pagination,filter,sorter)=>{\r\n\r\n        const pager=this.state.pagination\r\n        pager.current=pagination.current\r\n        this.setState({\r\n          pagination:pager\r\n        })\r\n        this.evaluateinit(pager.current)\r\n      }\r\n    updatestaus=(id)=>{\r\n\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        var url=randomStr+\"/update/eva/staus\"\r\n        Axios.post(url,{\"evaid\":id}).then((res)=>{\r\n            if(res.data.code==0){\r\n                message.success(\"成功\")\r\n                var datas=this.state.datas.filter(item=>item.ID!=id)\r\n                this.setState({datas,loading:false})\r\n            }\r\n        })\r\n    }\r\n    build(){\r\n\r\n        const columns =[\r\n            {\r\n                title:\"评语\",\r\n                dataIndex:\"Comment\",\r\n                key:\"Comment\",\r\n                render:(text,record)=>{\r\n                    return(<Paragraph ellipsis={{rows:1,expandable:true}} code copyable >{text}</Paragraph>)\r\n                }\r\n            },\r\n            {\r\n                title:\"图片\",\r\n                dataIndex:\"Images\",\r\n                key:\"Images\",\r\n                render:(images,record)=>{\r\n\r\n                  var imagehtml =images.map((itme)=>\r\n                        <img style={{height:120,width:120,paddingRight:10}} src={itme.Path}></img>\r\n                    )\r\n                    return imagehtml\r\n\r\n                }\r\n            },\r\n            {\r\n                title:\"操作\",\r\n                dataIndex:\"action\",\r\n                key:\"action\",\r\n                render:(id,record)=>{\r\n                    \r\n                    return(\r\n                        <Button onClick={()=>this.updatestaus(record.ID)}>已评</Button>\r\n\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n\r\n\r\n    \r\n\r\n        return(\r\n            <div>\r\n                <Row>\r\n                <div style={{float:\"right\",paddingRight:15,paddingBottom:10}}>\r\n               <Button onClick={()=>this.showModal()\r\n               } type=\"primary\">新增评语</Button> \r\n            </div>\r\n                </Row>\r\n                <Row>\r\n                    <Table \r\n                    loading={this.state.loading}\r\n                    pagination={this.state.pagination}\r\n                    onChange={this.handleTableChange}\r\n                    columns={columns} dataSource={this.state.datas}>\r\n                    </Table>\r\n                </Row>\r\n                {this.modile()}\r\n            </div>\r\n        )\r\n\r\n    }\r\n    render(){\r\n        var breItem=(\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n        <Breadcrumb.Item>所有链接</Breadcrumb.Item>\r\n        <Breadcrumb.Item>评语管理</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    )\r\n    \r\n    return(\r\n        <Frame\r\n        BreItem={breItem}\r\n        body={this.build()}\r\n        \r\n\r\n        />\r\n    )\r\n    }\r\n}\r\n\r\n\r\nEvaluate=Form.create({\"name\":\"Evaluate\"})(Evaluate);\r\nexport default Evaluate","import React from 'react'\r\nimport Frame from '../component/frame'\r\nimport {Breadcrumb,Divider,Table,Tag, Button, Row,Modal, Form,Input,Typography,Upload,Icon, message} from 'antd'\r\nimport Axios from 'axios';\r\n\r\nconst  randomStr=\"AWDKJL123\"\r\nconst { Paragraph } = Typography;\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n      reader.onload = () => resolve(reader.result);\r\n      reader.onerror = error => reject(error);\r\n    });\r\n  }\r\nclass Append extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.build=this.build.bind(this)\r\n        this.modile=this.modile.bind(this)\r\n        this.state={\r\n            visible: false,\r\n            previewVisible: false,\r\n            previewImage: '',\r\n            fileList:[],\r\n            pagination:{},\r\n            loading:false,\r\n            linkid:this.props.match.params.linkid,\r\n            datas:[]\r\n        }\r\n        this.evaluateinit(1)\r\n    }\r\n   \r\n    evaluateinit=page=>{\r\n\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        var url=randomStr+\"/list/evap\"\r\n        Axios.post(url,{\"page\":page,\"linkid\":parseInt(this.state.linkid),\"staus\":\"not\"}).then((res=>{\r\n\r\n            if(res.data.code==0){\r\n                var pagination=this.state.pagination\r\n             pagination.total=res.data.data.count\r\n                this.setState({\r\n                    datas:res.data.data.datas,\r\n                    pagination:pagination,\r\n                    loading:false\r\n                })\r\n            }\r\n\r\n        }))\r\n\r\n    }\r\n    showModal = () => {\r\n    this.setState({\r\n        visible: true,\r\n    });\r\n    };\r\n    \r\n    handleOk = e => {\r\n    \r\n    this.setState({\r\n        visible: false,\r\n    });\r\n    };\r\n    \r\n    handleCancel = e => {\r\n    \r\n    this.setState({\r\n        visible: false,\r\n    });\r\n    };\r\n    handleSubmit= e =>{\r\n\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n            var images=[]\r\n            var filelist=this.state.fileList\r\n            for(var i=0;i<filelist.length;i++){\r\n                images.push(filelist[i][\"response\"][\"data\"])\r\n            }\r\n            var data={\r\n                \"comment\":values[\"comment\"],\r\n                \"images\":images,\r\n                \"wangwang\":values[\"wangwang\"],\r\n                \"dealid\":values[\"dealid\"],\r\n                \"linkid\":parseInt(this.state.linkid)\r\n            }\r\n        \r\n            var url=randomStr+\"/add/evap\"\r\n            Axios.post(url,data).then((res)=>{\r\n\r\n                if(res.data.code==0){\r\n                message.success(\"添加成功\")\r\n                this.evaluateinit(1)\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        });\r\n\r\n    };\r\n    handleChange = ({ fileList }) => {\r\n        \r\n        console.log(fileList)\r\n        this.setState({ fileList })\r\n    };\r\n\r\n    handlePreview = async file => {\r\n      \r\n        if (!file.url && !file.preview) {\r\n          file.preview =  await getBase64(file.originFileObj);\r\n        }\r\n       \r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n          });\r\n    }\r\n    modile(){\r\n        var fileList=this.state.fileList\r\n        const uploadButton = (\r\n            <div>\r\n              <Icon type=\"plus\" />\r\n              <div className=\"ant-upload-text\">Upload</div>\r\n            </div>\r\n          );\r\n        const { getFieldDecorator } = this.props.form;\r\n        return(\r\n            <Modal \r\n           \r\n            maskClosable={false}\r\n            title=\"新增追评\"\r\n            visible={this.state.visible}\r\n            onOk={this.handleOk}\r\n            onCancel={this.handleCancel}\r\n          >\r\n        <Form  labelCol={{span:5}} wrapperCol={{span:15}} onSubmit={this.handleSubmit}  >\r\n            <Form.Item label=\"评语\">\r\n            {\r\n                getFieldDecorator(\"comment\", {\r\n                    rules: [{ required: true, message: '不可为空'}]\r\n                })(<Input.TextArea />)\r\n            }\r\n            </Form.Item> \r\n            <Form.Item label=\"订单号\">\r\n            {\r\n                getFieldDecorator(\"dealid\", {\r\n                    rules: [{ required: true, message: '不可为空'}]\r\n                })(<Input />)\r\n            }\r\n            </Form.Item> \r\n            <Form.Item label=\"旺旺号\">\r\n            {\r\n                getFieldDecorator(\"wangwang\", {\r\n                    rules: [{ required: true, message: '不可为空'}]\r\n                })(<Input />)\r\n            }\r\n            </Form.Item> \r\n            <Form.Item label=\"图片\">\r\n          <Upload\r\n          name=\"image\"\r\n          action=\"/upload\"\r\n          listType=\"picture-card\"\r\n          fileList={fileList}\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 8 ? null : uploadButton}\r\n        </Upload>\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\" >提交</Button>\r\n            </Form.Item>\r\n        </Form>\r\n              </Modal>\r\n        )\r\n    }\r\n    handleTableChange=(pagination,filter,sorter)=>{\r\n\r\n        const pager=this.state.pagination\r\n        pager.current=pagination.current\r\n        this.setState({\r\n          pagination:pager\r\n        })\r\n        this.evaluateinit(pager.current)\r\n      }\r\n    updatestaus=(id)=>{\r\n\r\n        this.setState({\r\n            loading:true\r\n        })\r\n        var url=randomStr+\"/update/evap/staus\"\r\n        Axios.post(url,{\"evaappendid\":id}).then((res)=>{\r\n            if(res.data.code==0){\r\n                message.success(\"成功\")\r\n                var datas=this.state.datas.filter(item=>item.ID!=id)\r\n                this.setState({datas,loading:false})\r\n            }else{\r\n                message.error(\"失败\")\r\n                this.setState({\r\n                    loading:false\r\n                })\r\n            }\r\n        })\r\n    }\r\n    build(){\r\n\r\n        const columns =[\r\n            {\r\n                title:\"评语\",\r\n                dataIndex:\"Comment\",\r\n                key:\"Comment\",\r\n                render:(text,record)=>{\r\n                    return(<Paragraph ellipsis={{rows:1,expandable:true}} code copyable >{text}</Paragraph>)\r\n                }\r\n            },\r\n            {\r\n                title:\"旺旺号\",\r\n                dataIndex:\"Wangwang\",\r\n                key:\"Wangwang\",\r\n                render:(text,record)=>{\r\n                    return(<Paragraph ellipsis={{rows:1,expandable:true}} code copyable >{text}</Paragraph>)\r\n                }\r\n            },\r\n            {\r\n                title:\"订单号\",\r\n                dataIndex:\"Dealid\",\r\n                key:\"Dealid\",\r\n                render:(text,record)=>{\r\n                    return(<Paragraph ellipsis={{rows:1,expandable:true}} code copyable >{text}</Paragraph>)\r\n                }\r\n            },\r\n            {\r\n                title:\"图片\",\r\n                dataIndex:\"Images\",\r\n                key:\"Images\",\r\n                render:(images,record)=>{\r\n\r\n                  var imagehtml =images.map((itme)=>\r\n                        <img style={{height:120,width:120,paddingRight:10}} src={itme.Path}></img>\r\n                    )\r\n                    return imagehtml\r\n\r\n                }\r\n            },\r\n            {\r\n                title:\"操作\",\r\n                dataIndex:\"action\",\r\n                key:\"action\",\r\n                render:(id,record)=>{\r\n                    \r\n                    return(\r\n                        <Button onClick={()=>this.updatestaus(record.ID)}>已评</Button>\r\n\r\n                    )\r\n                }\r\n            }\r\n        ]\r\n\r\n\r\n    \r\n\r\n        return(\r\n            <div>\r\n                <Row>\r\n                <div style={{float:\"right\",paddingRight:15,paddingBottom:10}}>\r\n               <Button onClick={()=>this.showModal()\r\n               } type=\"primary\">新增评语</Button> \r\n            </div>\r\n                </Row>\r\n                <Row>\r\n                    <Table \r\n                    loading={this.state.loading}\r\n                    pagination={this.state.pagination}\r\n                    onChange={this.handleTableChange}\r\n                    columns={columns} dataSource={this.state.datas}>\r\n                    </Table>\r\n                </Row>\r\n                {this.modile()}\r\n            </div>\r\n        )\r\n\r\n    }\r\n    render(){\r\n        var breItem=(\r\n        <Breadcrumb style={{ margin: '16px 0' }}>\r\n        <Breadcrumb.Item>所有链接</Breadcrumb.Item>\r\n        <Breadcrumb.Item>追评管理</Breadcrumb.Item>\r\n      </Breadcrumb>\r\n    )\r\n    \r\n    return(\r\n        <Frame\r\n        BreItem={breItem}\r\n        body={this.build()}\r\n        \r\n\r\n        />\r\n    )\r\n    }\r\n}\r\n\r\n\r\nAppend=Form.create({\"name\":\"Evaluate\"})(Append);\r\nexport default Append","import React from 'react'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom'\r\nimport LinkPage from '../pages/linkpage'\r\nimport Evaluate from '../pages/evaluate'\r\nimport Append from '../pages/append'\r\nconst Root=()=>(\r\n\r\n    <HashRouter>\r\n\r\n        <Switch>\r\n            <Route exact path=\"/link\" component={LinkPage}></Route>\r\n            <Route exact path=\"/evaluate/:linkid\" component={Evaluate}></Route>\r\n            <Route exact path=\"/append/:linkid\" component={Append}></Route>\r\n        </Switch>\r\n    </HashRouter>\r\n    \r\n)\r\nexport default Root","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'\n\nimport * as serviceWorker from './serviceWorker';\nimport Root from './routes/Route'\nimport { from } from 'rxjs';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}